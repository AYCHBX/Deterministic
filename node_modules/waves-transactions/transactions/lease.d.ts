import { ILeaseTransaction, ILeaseParams, WithId, WithSender } from '../transactions';
import { TSeedTypes } from '../types';
/**
 * Creates and signs [[ILeaseTransaction]].
 *
 * You can use this function with multiple seeds. In this case it will sign transaction accordingly and will add one proof per seed.
 * Also you can use already signed [[ILeaseTransaction]] as a second argument.
 *
 * ### Usage
 * ```js
 * const { lease } = require('waves-transactions')
 *
 * const seed = 'b716885e9ba64442b4f1263c8e2d8671e98b800c60ec4dc2a27c83e5f9002b18'
 *
 * const params = {
 *   amount: 100,
 *   recipient: '3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs',
 *   //timestamp: Date.now(),
 *   //fee: 100000,
 * }
 *
 * const signedLeaseTx = lease(params, seed)
 * ```
 * ### Output
 * ```json
 * {
 *   "id": "Eh1jDei8q5tgzZJ4BkTea72STgVmUPcnfNDPGMsRsBTL",
 *   "type": 8,
 *   "version": 2,
 *   "senderPublicKey": "G62H1XE5rnaCgCCURV5pWwQHzWezZB7VkkVgqthdKgkj",
 *   "amount": 100,
 *   "recipient": "3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs",
 *   "fee": 100000,
 *   "timestamp": 1547021917084,
 *   "proofs": [
 *     "57ydrrxzCdZnrXLMQZgEeYob4tYqNo8SKP7gnh4XothLE7FS9XmgZHcsBqG424N9C8q3imfRGR3mT7ychqXcXfaL"
 *   ]
 * }
 * ```
 *
 */
export declare function lease(params: ILeaseParams, seed: TSeedTypes): ILeaseTransaction & WithId;
export declare function lease(paramsOrTx: ILeaseParams & WithSender | ILeaseTransaction, seed?: TSeedTypes): ILeaseTransaction & WithId;
