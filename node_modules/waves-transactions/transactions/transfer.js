"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transactions_1 = require("../transactions");
const waves_crypto_1 = require("waves-crypto");
const generic_1 = require("../generic");
const marshall_1 = require("@waves/marshall");
function transfer(paramsOrTx, seed) {
    const type = transactions_1.TRANSACTION_TYPE.TRANSFER;
    const version = paramsOrTx.version || 2;
    const seedsAndIndexes = generic_1.convertToPairs(seed);
    const senderPublicKey = generic_1.getSenderPublicKey(seedsAndIndexes, paramsOrTx);
    const tx = {
        type,
        version,
        senderPublicKey,
        assetId: paramsOrTx.assetId,
        recipient: paramsOrTx.recipient,
        amount: paramsOrTx.amount,
        attachment: paramsOrTx.attachment || '',
        fee: generic_1.fee(paramsOrTx, 100000),
        timestamp: paramsOrTx.timestamp || Date.now(),
        proofs: paramsOrTx.proofs || [],
        id: ''
    };
    const bytes = marshall_1.binary.serializeTx(tx);
    seedsAndIndexes.forEach(([s, i]) => generic_1.addProof(tx, waves_crypto_1.signBytes(bytes, s), i));
    tx.id = waves_crypto_1.hashBytes(bytes);
    return tx;
}
exports.transfer = transfer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHJhbnNhY3Rpb25zL3RyYW5zZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0RBQTZHO0FBQzdHLCtDQUFtRDtBQUNuRCx3Q0FBOEU7QUFFOUUsOENBQXdDO0FBZ0R4QyxTQUFnQixRQUFRLENBQUMsVUFBZSxFQUFFLElBQWlCO0lBQ3pELE1BQU0sSUFBSSxHQUFHLCtCQUFnQixDQUFDLFFBQVEsQ0FBQztJQUN2QyxNQUFNLE9BQU8sR0FBRyxVQUFVLENBQUMsT0FBTyxJQUFJLENBQUMsQ0FBQztJQUN4QyxNQUFNLGVBQWUsR0FBRyx3QkFBYyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLE1BQU0sZUFBZSxHQUFHLDRCQUFrQixDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUV4RSxNQUFNLEVBQUUsR0FBa0M7UUFDeEMsSUFBSTtRQUNKLE9BQU87UUFDUCxlQUFlO1FBQ2YsT0FBTyxFQUFDLFVBQVUsQ0FBQyxPQUFPO1FBQzFCLFNBQVMsRUFBRSxVQUFVLENBQUMsU0FBUztRQUMvQixNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU07UUFDekIsVUFBVSxFQUFFLFVBQVUsQ0FBQyxVQUFVLElBQUksRUFBRTtRQUN2QyxHQUFHLEVBQUUsYUFBRyxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUM7UUFDNUIsU0FBUyxFQUFFLFVBQVUsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUM3QyxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sSUFBSSxFQUFFO1FBQy9CLEVBQUUsRUFBRSxFQUFFO0tBQ1AsQ0FBQTtJQUVELE1BQU0sS0FBSyxHQUFHLGlCQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXJDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsa0JBQVEsQ0FBQyxFQUFFLEVBQUUsd0JBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RSxFQUFFLENBQUMsRUFBRSxHQUFHLHdCQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFekIsT0FBTyxFQUFFLENBQUE7QUFDWCxDQUFDO0FBMUJELDRCQTBCQyJ9