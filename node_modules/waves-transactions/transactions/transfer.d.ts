import { ITransferTransaction, ITransferParams, WithId, WithSender } from '../transactions';
import { TSeedTypes } from '../types';
/**
 * Creates and signs [[ITransferTransaction]].
 *
 * You can use this function with multiple seeds. In this case it will sign transaction accordingly and will add one proof per seed.
 * Also you can use already signed [[ITransferTransaction]] as a second argument.
 *
 * ### Usage
 * ```js
 * const { transfer } = require('waves-transactions')
 *
 * const seed = 'b716885e9ba64442b4f1263c8e2d8671e98b800c60ec4dc2a27c83e5f9002b18'
 *
 * //Transfering 1 WAVES
 * const params = {
 *   amount: 100000000,
 *   recipient: '3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs',
 *   //feeAssetId: undefined
 *   //assetId: undefined
 *   //attachment: undefined
 *   //timestamp: Date.now(),
 *   //fee: 100000,
 * }
 *
 * const signedTransferTx = transfer(params, seed)
 * ```
 * ### Output
 * ```json
 * {
 *   "id": "qDGv5FEfpFEFfMmiXegDk5dWRgkyrDBgTBrQ7rNj9fS",
 *   "type": 4,
 *   "version": 2,
 *   "senderPublicKey": "G62H1XE5rnaCgCCURV5pWwQHzWezZB7VkkVgqthdKgkj",
 *   "recipient": "3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs",
 *   "amount": 100000000,
 *   "attachment": "",
 *   "fee": 100000,
 *   "timestamp": 1547021917138,
 *   "proofs": [
 *     "5Y2QmAi1HTEpm4X9HsUdYiwds6TgPRAm8TYcNHidNx5uYCpXfDnRFbtZbtFJrFSWFuWQaVBNhuKM1M1zg6QZuLjS"
 *   ]
 * }
 * ```
 *
 */
export declare function transfer(params: ITransferParams, seed: TSeedTypes): ITransferTransaction & WithId;
export declare function transfer(paramsOrTx: ITransferParams & WithSender | ITransferTransaction, seed?: TSeedTypes): ITransferTransaction & WithId;
