"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transactions_1 = require("../transactions");
const generic_1 = require("../generic");
const waves_crypto_1 = require("waves-crypto");
const marshall_1 = require("@waves/marshall");
function massTransfer(paramsOrTx, seed) {
    const type = transactions_1.TRANSACTION_TYPE.MASS_TRANSFER;
    const version = paramsOrTx.version || 1;
    const seedsAndIndexes = generic_1.convertToPairs(seed);
    const senderPublicKey = generic_1.getSenderPublicKey(seedsAndIndexes, paramsOrTx);
    if (!Array.isArray(paramsOrTx.transfers))
        throw new Error('["transfers should be array"]');
    const tx = {
        type,
        version,
        senderPublicKey,
        assetId: paramsOrTx.assetId,
        transfers: paramsOrTx.transfers,
        fee: generic_1.fee(paramsOrTx, 100000 + Math.ceil(0.5 * paramsOrTx.transfers.length) * 100000),
        timestamp: paramsOrTx.timestamp || Date.now(),
        attachment: paramsOrTx.attachment || '',
        proofs: paramsOrTx.proofs || [],
        id: '',
    };
    const bytes = marshall_1.binary.serializeTx(tx);
    seedsAndIndexes.forEach(([s, i]) => generic_1.addProof(tx, waves_crypto_1.signBytes(bytes, s), i));
    tx.id = waves_crypto_1.hashBytes(bytes);
    return tx;
}
exports.massTransfer = massTransfer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFzcy10cmFuc2Zlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2FjdGlvbnMvbWFzcy10cmFuc2Zlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQUFxSDtBQUNySCx3Q0FBOEU7QUFFOUUsK0NBQW1EO0FBQ25ELDhDQUF3QztBQTZEeEMsU0FBZ0IsWUFBWSxDQUFDLFVBQWUsRUFBRSxJQUFpQjtJQUM3RCxNQUFNLElBQUksR0FBRywrQkFBZ0IsQ0FBQyxhQUFhLENBQUM7SUFDNUMsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUM7SUFDeEMsTUFBTSxlQUFlLEdBQUcsd0JBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QyxNQUFNLGVBQWUsR0FBRyw0QkFBa0IsQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFeEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQztRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztJQUUzRixNQUFNLEVBQUUsR0FBc0M7UUFDNUMsSUFBSTtRQUNKLE9BQU87UUFDUCxlQUFlO1FBQ2YsT0FBTyxFQUFFLFVBQVUsQ0FBQyxPQUFPO1FBQzNCLFNBQVMsRUFBRSxVQUFVLENBQUMsU0FBUztRQUMvQixHQUFHLEVBQUUsYUFBRyxDQUFDLFVBQVUsRUFBRSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUM7UUFDcEYsU0FBUyxFQUFFLFVBQVUsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUM3QyxVQUFVLEVBQUUsVUFBVSxDQUFDLFVBQVUsSUFBSSxFQUFFO1FBQ3ZDLE1BQU0sRUFBRSxVQUFVLENBQUMsTUFBTSxJQUFJLEVBQUU7UUFDL0IsRUFBRSxFQUFFLEVBQUU7S0FDUCxDQUFBO0lBRUQsTUFBTSxLQUFLLEdBQUcsaUJBQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFckMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxrQkFBUSxDQUFDLEVBQUUsRUFBRSx3QkFBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsd0JBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUV6QixPQUFPLEVBQUUsQ0FBQTtBQUNYLENBQUM7QUEzQkQsb0NBMkJDIn0=