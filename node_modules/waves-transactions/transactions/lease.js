"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transactions_1 = require("../transactions");
const waves_crypto_1 = require("waves-crypto");
const generic_1 = require("../generic");
const validation_1 = require("../validation");
const schemas_1 = require("../schemas");
exports.leaseValidation = (tx) => [];
exports.leaseToBytes = (tx) => waves_crypto_1.concat(waves_crypto_1.BYTES([transactions_1.TransactionType.Lease, tx.version, 0]), waves_crypto_1.BASE58_STRING(tx.senderPublicKey), waves_crypto_1.BASE58_STRING(tx.recipient), waves_crypto_1.LONG(tx.amount), waves_crypto_1.LONG(tx.fee), waves_crypto_1.LONG(tx.timestamp));
/**
 * Creates and signs [[LeaseTransaction]].
 *
 * You can use this function with multiple seeds. In this case it will sign transaction accordingly and will add one proof per seed.
 * Also you can use already signed [[LeaseTransaction]] as a second argument.
 *
 * ### Usage
 * ```js
 * const { lease } = require('waves-transactions')
 *
 * const seed = 'b716885e9ba64442b4f1263c8e2d8671e98b800c60ec4dc2a27c83e5f9002b18'
 *
 * const params = {
 *   amount: 100,
 *   recipient: '3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs',
 *   //timestamp: Date.now(),
 *   //fee: 100000,
 * }
 *
 * const signedLeaseTx = lease(params, seed)
 * ```
 * ### Output
 * ```json
 * {
 *   "id": "DZqFQ6dRK4BDzMita1tQKa1q6PT3usPTmFwViMkdyi4Y",
 *   "type": 8,
 *   "version": 2,
 *   "fee": 100000,
 *   "senderPublicKey": "G62H1XE5rnaCgCCURV5pWwQHzWezZB7VkkVgqthdKgkj",
 *   "timestamp": 1542716926694,
 *   "proofs": [
 *     "5sV8pS6ZJiRgP8miARCAiSASSm2tmoUUjwfJTYUryCkGhHHmSbyFJhEMd24RPJfCGsMSaJSVwhZkcXUL3XoMoARb"
 *   ],
 *   "amount": 100,
 *   "recipient": "3P23fi1qfVw6RVDn4CH2a5nNouEtWNQ4THs"
 * }
 * ```
 *
 * @param seed
 * @param paramsOrTx
 * @returns
 *
 */
function lease(paramsOrTx, seed) {
    const { nextSeed } = generic_1.pullSeedAndIndex(seed);
    const senderPublicKey = generic_1.getSenderPublicKey(seed, paramsOrTx);
    const tx = Object.assign({ type: transactions_1.TransactionType.Lease, version: 2, fee: 100000, senderPublicKey, timestamp: Date.now(), proofs: [], id: '' }, paramsOrTx);
    validation_1.raiseValidationErrors(validation_1.generalValidation(tx, schemas_1.validators.LeaseTransaction), exports.leaseValidation(tx));
    const bytes = exports.leaseToBytes(tx);
    generic_1.mapSeed(seed, (s, i) => generic_1.addProof(tx, waves_crypto_1.signBytes(bytes, s), i));
    tx.id = waves_crypto_1.hashBytes(bytes);
    return nextSeed ? lease(tx, nextSeed) : tx;
}
exports.lease = lease;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHJhbnNhY3Rpb25zL2xlYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsa0RBQXlFO0FBQ3pFLCtDQUF1RjtBQUN2Rix3Q0FBb0Y7QUFHcEYsOENBQXdFO0FBQ3hFLHdDQUF1QztBQVMxQixRQUFBLGVBQWUsR0FBRyxDQUFDLEVBQW9CLEVBQW9CLEVBQUUsQ0FBQyxFQUFFLENBQUE7QUFFaEUsUUFBQSxZQUFZLEdBQUcsQ0FBQyxFQUFvQixFQUFjLEVBQUUsQ0FBQyxxQkFBTSxDQUN0RSxvQkFBSyxDQUFDLENBQUMsOEJBQWUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUM3Qyw0QkFBYSxDQUFDLEVBQUUsQ0FBQyxlQUFlLENBQUMsRUFDakMsNEJBQWEsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQzNCLG1CQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUNmLG1CQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUNaLG1CQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUNuQixDQUFBO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTBDRztBQUNILFNBQWdCLEtBQUssQ0FBQyxVQUEwQyxFQUFFLElBQWdCO0lBQ2hGLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRywwQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUUzQyxNQUFNLGVBQWUsR0FBRyw0QkFBa0IsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUE7SUFFNUQsTUFBTSxFQUFFLG1CQUNKLElBQUksRUFBRSw4QkFBZSxDQUFDLEtBQUssRUFDM0IsT0FBTyxFQUFFLENBQUMsRUFDVixHQUFHLEVBQUUsTUFBTSxFQUNYLGVBQWUsRUFDZixTQUFTLEVBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxFQUNwQixNQUFNLEVBQUUsRUFBRSxFQUNWLEVBQUUsRUFBRSxFQUFFLElBQ0wsVUFBVSxDQUNaLENBQUE7SUFFSCxrQ0FBcUIsQ0FDbkIsOEJBQWlCLENBQUMsRUFBRSxFQUFFLG9CQUFVLENBQUMsZ0JBQWdCLENBQUMsRUFDbEQsdUJBQWUsQ0FBQyxFQUFFLENBQUMsQ0FDcEIsQ0FBQTtJQUVELE1BQU0sS0FBSyxHQUFHLG9CQUFZLENBQUMsRUFBRSxDQUFDLENBQUE7SUFFOUIsaUJBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxrQkFBUSxDQUFDLEVBQUUsRUFBRSx3QkFBUyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQzdELEVBQUUsQ0FBQyxFQUFFLEdBQUcsd0JBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUN4QixPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFBO0FBQzVDLENBQUM7QUExQkQsc0JBMEJDIn0=