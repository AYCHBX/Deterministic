"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Adapter_1 = require("./Adapter");
var TresorAdapter = /** @class */ (function (_super) {
    __extends(TresorAdapter, _super);
    function TresorAdapter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TresorAdapter.prototype.getPublicKey = function () {
        return Promise.resolve(''); // TODO
    };
    TresorAdapter.prototype.getAddress = function () {
        return Promise.resolve(''); // TODO
    };
    TresorAdapter.prototype.getSeed = function () {
        return Promise.reject(Error('Method "getSeed" is not available!'));
    };
    TresorAdapter.prototype.signRequest = function (bytes) {
        return Promise.resolve(''); //TODO
    };
    TresorAdapter.prototype.signTransaction = function (bytes, amountPrecision) {
        return Promise.resolve(''); //TODO
    };
    TresorAdapter.prototype.signOrder = function (bytes, amountPrecision) {
        return Promise.resolve(''); //TODO
    };
    TresorAdapter.prototype.signData = function (bytes) {
        return Promise.resolve(''); //TODO
    };
    TresorAdapter.prototype.getPrivateKey = function () {
        return Promise.reject('No private key');
    };
    TresorAdapter.isAvailable = function () {
        return Promise.resolve(false);
    };
    TresorAdapter.type = "tresor" /* Tresor */;
    return TresorAdapter;
}(Adapter_1.Adapter));
exports.TresorAdapter = TresorAdapter;
//# sourceMappingURL=TresorAdapter.js.map