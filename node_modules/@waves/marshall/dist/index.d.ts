import { ILongFactory } from "./txSchemas";
export declare namespace binary {
    function serializeTx<LONG = string | number>(tx: any, longFactory?: ILongFactory<LONG>): Uint8Array;
    /**
     * This function cannot transactions without version
     */
    function parseTx<LONG = string>(bytes: Uint8Array, longFactory?: ILongFactory<LONG>): any;
    function serializeOrder<LONG = string | number>(ord: any, longFactory?: ILongFactory<LONG>): Uint8Array;
    /**
     * This function cannot parse OrderV1, which doesn't have version field
     */
    function parseOrder<LONG = string>(bytes: Uint8Array, longFactory?: ILongFactory<LONG>): any;
}
export declare namespace json {
    function parseTx<LONG = string>(str: string, lf?: ILongFactory<LONG>): any;
    function stringifyTx(tx: any): string;
}
export declare function convert<T = string, R = string>(tx: any, toLf?: ILongFactory<T>, fromLf?: ILongFactory<R>): any;
export declare function getSchema(type: number, version?: number): any;
