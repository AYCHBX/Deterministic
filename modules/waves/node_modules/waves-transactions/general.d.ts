import { IAliasTransaction, IBurnTransaction, ICancelLeaseTransaction, IDataTransaction, IIssueTransaction, ILeaseTransaction, IMassTransferTransaction, IOrder, IReissueTransaction, ISetAssetScriptTransaction, ISetScriptTransaction, ITransferTransaction, TRANSACTION_TYPE, TTx } from './transactions';
import { TSeedTypes } from './types';
export interface WithTxType {
    type: TRANSACTION_TYPE;
}
export declare const signTx: (tx: IAliasTransaction<string | number> | IIssueTransaction<string | number> | ITransferTransaction<string | number> | IReissueTransaction<string | number> | IBurnTransaction<string | number> | ILeaseTransaction<string | number> | ICancelLeaseTransaction<string | number> | IMassTransferTransaction<string | number> | ISetScriptTransaction<string | number> | IDataTransaction<string | number> | ISetAssetScriptTransaction<string | number> | import("./transactions").IContractInvocationTransaction<string | number> | (import("./transactions").IAliasParams<string | number> & WithTxType) | (import("./transactions").IBurnParams<string | number> & WithTxType) | (import("./transactions").IContractInvocationParams<string | number> & WithTxType) | (import("./transactions").ICancelLeaseParams<string | number> & WithTxType) | (import("./transactions").IDataParams<string | number> & WithTxType) | (import("./transactions").IIssueParams<string | number> & WithTxType) | (import("./transactions").ILeaseParams<string | number> & WithTxType) | (import("./transactions").IMassTransferParams<string | number> & WithTxType) | (import("./transactions").IReissueParams<string | number> & WithTxType) | (import("./transactions").ISetAssetScriptParams<string | number> & WithTxType) | (import("./transactions").ISetScriptParams<string | number> & WithTxType) | (import("./transactions").ITransferParams<string | number> & WithTxType), seed: TSeedTypes) => TTx<string | number>;
export declare const serialize: (obj: IAliasTransaction<string | number> | IIssueTransaction<string | number> | ITransferTransaction<string | number> | IReissueTransaction<string | number> | IBurnTransaction<string | number> | ILeaseTransaction<string | number> | ICancelLeaseTransaction<string | number> | IMassTransferTransaction<string | number> | ISetScriptTransaction<string | number> | IDataTransaction<string | number> | ISetAssetScriptTransaction<string | number> | import("./transactions").IContractInvocationTransaction<string | number> | IOrder<string | number>) => Uint8Array;
export declare const broadcast: (tx: TTx<string | number>, apiBase: string) => Promise<any>;
