import { ICancelLeaseTransaction, ICancelLeaseParams, WithId, WithSender } from '../transactions';
import { TSeedTypes } from '../types';
/**
 * Creates and signs [[ICancelLeaseTransaction]].
 *
 * You can use this function with multiple seeds. In this case it will sign transaction accordingly and will add one proof per seed.
 * Also you can use already signed [[ICancelLeaseTransaction]] as a second argument.
 *
 * ### Usage
 * ```js
 * const { cancelLease } = require('waves-transactions')
 *
 * const seed = 'b716885e9ba64442b4f1263c8e2d8671e98b800c60ec4dc2a27c83e5f9002b18'
 *
 * const params = {
 *   leaseId: '2fYhSNrXpyKgbtHzh5tnpvnQYuL7JpBFMBthPSGFrqqg',
 *   //timestamp: Date.now(),
 *   //fee: 100000,
 *   //chainId: 'W'
 * }
 *
 * const signedCancelLeaseTx = cancelLease(params, seed)
 * ```
 * ### Output
 * ```json
 * {
 *   "id": "5R38jRuV8qTqEWtkRxj5ghXWBrffWXtW9ELniwtT7cco",
 *   "type": 9,
 *   "version": 2,
 *   "senderPublicKey": "G62H1XE5rnaCgCCURV5pWwQHzWezZB7VkkVgqthdKgkj",
 *   "leaseId": "2fYhSNrXpyKgbtHzh5tnpvnQYuL7JpBFMBthPSGFrqqg",
 *   "fee": 100000,
 *   "timestamp": 1547021917036,
 *   "chainId": 87,
 *   "proofs": [
 *     "4Qdu4ag2iBJMKoNNotpaCHYd5NmR7KqysHcTMnsBHRuavLdLCFe5KpF1EoefnewtVXe8Ykud17pvuMrCnQ4GmnKq"
 *   ]
 * }
 * ```
 *
 */
export declare function cancelLease(params: ICancelLeaseParams, seed: TSeedTypes): ICancelLeaseTransaction & WithId;
export declare function cancelLease(paramsOrTx: ICancelLeaseParams & WithSender | ICancelLeaseTransaction, seed?: TSeedTypes): ICancelLeaseTransaction & WithId;
