"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const transactions_1 = require("../transactions");
const waves_crypto_1 = require("waves-crypto");
const generic_1 = require("../generic");
const marshall_1 = require("@waves/marshall");
function contractInvocation(paramsOrTx, seed) {
    const type = transactions_1.TRANSACTION_TYPE.CONTRACT_INVOCATION;
    const version = paramsOrTx.version || 1;
    const seedsAndIndexes = generic_1.convertToPairs(seed);
    const senderPublicKey = generic_1.getSenderPublicKey(seedsAndIndexes, paramsOrTx);
    const tx = {
        type,
        version,
        senderPublicKey,
        contractAddress: paramsOrTx.contractAddress,
        call: paramsOrTx.call,
        payment: paramsOrTx.payment,
        fee: generic_1.fee(paramsOrTx, 1000000),
        timestamp: Date.now(),
        chainId: generic_1.networkByte(paramsOrTx.chainId, 87),
        proofs: paramsOrTx.proofs || [],
        id: '',
    };
    const bytes = marshall_1.binary.serializeTx(tx);
    seedsAndIndexes.forEach(([s, i]) => generic_1.addProof(tx, waves_crypto_1.signBytes(bytes, s), i));
    tx.id = waves_crypto_1.hashBytes(bytes);
    //FixMe: for now node requires to have empty key field in args
    tx.call.args = tx.call.args.map(arg => (Object.assign({}, arg, { key: '' })));
    return tx;
}
exports.contractInvocation = contractInvocation;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJhY3QtaW52b2NhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90cmFuc2FjdGlvbnMvY29udHJhY3QtaW52b2NhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtEQU13QjtBQUN4QiwrQ0FBb0Q7QUFDcEQsd0NBQTJGO0FBRTNGLDhDQUF3QztBQU14QyxTQUFnQixrQkFBa0IsQ0FBQyxVQUFlLEVBQUUsSUFBaUI7SUFDbkUsTUFBTSxJQUFJLEdBQUcsK0JBQWdCLENBQUMsbUJBQW1CLENBQUM7SUFDbEQsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLE9BQU8sSUFBSSxDQUFDLENBQUM7SUFDeEMsTUFBTSxlQUFlLEdBQUcsd0JBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QyxNQUFNLGVBQWUsR0FBRyw0QkFBa0IsQ0FBQyxlQUFlLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFeEUsTUFBTSxFQUFFLEdBQTRDO1FBQ2xELElBQUk7UUFDSixPQUFPO1FBQ1AsZUFBZTtRQUNmLGVBQWUsRUFBRSxVQUFVLENBQUMsZUFBZTtRQUMzQyxJQUFJLEVBQUUsVUFBVSxDQUFDLElBQUk7UUFDckIsT0FBTyxFQUFFLFVBQVUsQ0FBQyxPQUFPO1FBQzNCLEdBQUcsRUFBRSxhQUFHLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQztRQUM3QixTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNyQixPQUFPLEVBQUUscUJBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQztRQUM1QyxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sSUFBSSxFQUFFO1FBQy9CLEVBQUUsRUFBRSxFQUFFO0tBQ1AsQ0FBQztJQUVGLE1BQU0sS0FBSyxHQUFHLGlCQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRXJDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsa0JBQVEsQ0FBQyxFQUFFLEVBQUUsd0JBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRSxFQUFFLENBQUMsRUFBRSxHQUFHLHdCQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFekIsOERBQThEO0lBQzlELEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLG1CQUFLLEdBQUcsSUFBRSxHQUFHLEVBQUUsRUFBRSxJQUFFLENBQUMsQ0FBQztJQUU1RCxPQUFPLEVBQUUsQ0FBQTtBQUNYLENBQUM7QUE3QkQsZ0RBNkJDIn0=